@page
@model DFApp.Web.Pages.LogViewer.IndexModel
@{
    ViewBag.Title = "日志查看器";
}

<div class="container-fluid">
    <h2 class="mb-4">日志查看器</h2>
    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">日志文件</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list 
                        list-group list-group-flush" id="logFilesList">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0" id="currentFileName">选择日志文件</h5>
                    <div>
                        <div class="form-check form-switch d-inline-block me-3">
                            <input class="form-check-input" type="checkbox" id="autoRefresh">
                            <label class="form-check-label" for="autoRefresh">实时更新</label>
                        </div>
                        <button class="btn btn-sm btn-outline-secondary" id="refreshBtn">
                            <i class="fas fa-sync-alt"></i> 刷新
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <pre id="logContent" style="height: 600px; overflow-y: auto; background-color: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap; word-break: break-all;"></pre>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            let currentFile = '';
            let autoRefreshInterval;            // 加载日志文件列表
            function loadLogFiles() {
                $('#logFilesList').html('<div class="text-center p-3"><div class="spinner-border" role="status"></div></div>');
                
                $.ajax({
                    url: '/api/LogViewer/log-files',
                    method: 'GET',
                    success: function (files) {
                        const logsList = $('#logFilesList');
                        logsList.empty();
                        
                        if (!files || files.length === 0) {
                            logsList.html('<div class="text-center p-3">没有找到日志文件</div>');
                            return;
                        }
                        
                        files.forEach(file => {
                            const size = formatFileSize(file.size);
                            const date = new Date(file.lastModified).toLocaleString();
                            logsList.append(`
                                <a href="#" class="list-group-item list-group-item-action log-file" data-file="${file.name}">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">${file.name}</h6>
                                        <small>${size}</small>
                                    </div>
                                    <small class="text-muted">${date}</small>
                                </a>
                            `);
                        });
                    },
                    error: function (xhr, status, error) {
                        $('#logFilesList').html('<div class="alert alert-danger m-3">加载日志文件列表失败</div>');
                        console.error('加载日志文件列表失败:', error);
                    }
                });
            }// 加载日志内容
            function loadLogContent(fileName, isTail = true) {
                if (!fileName) {
                    console.error('文件名不能为空');
                    return;
                }

                const url = isTail 
                    ? `/api/LogViewer/log-content?fileName=${fileName}&isTail=true` 
                    : `/api/LogViewer/log-content?fileName=${fileName}`;
                
                $('#logContent').html('<div class="text-center"><div class="spinner-border" role="status"></div></div>');
                
                $.ajax({
                    url: url,
                    method: 'GET',
                    success: function (content) {
                        $('#logContent').text(content || '文件内容为空');
                        $('#currentFileName').text(fileName);
                        if (content) {
                            scrollToBottom();
                        }
                    },
                    error: function (xhr, status, error) {
                        let errorMessage = '加载日志内容失败';
                        if (xhr.status === 404) {
                            errorMessage = '找不到日志文件';
                        } else if (xhr.responseText) {
                            errorMessage = xhr.responseText;
                        }
                        $('#logContent').html(`<div class="alert alert-danger">${errorMessage}</div>`);
                        console.error('加载日志失败:', error);
                    }
                });
            }

            // 格式化文件大小
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 B';
                const k = 1024;
                const sizes = ['B', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            // 滚动到底部
            function scrollToBottom() {
                const logContent = document.getElementById('logContent');
                logContent.scrollTop = logContent.scrollHeight;
            }

            // 切换自动刷新
            function toggleAutoRefresh(enable) {
                if (enable && currentFile) {
                    autoRefreshInterval = setInterval(() => {
                        loadLogContent(currentFile);
                    }, 2000);
                } else {
                    clearInterval(autoRefreshInterval);
                }
            }

            // 事件绑定
            $('#logFilesList').on('click', '.log-file', function (e) {
                e.preventDefault();
                $('.log-file').removeClass('active');
                $(this).addClass('active');
                currentFile = $(this).data('file');
                loadLogContent(currentFile);
            });

            $('#autoRefresh').change(function () {
                toggleAutoRefresh(this.checked);
            });

            $('#refreshBtn').click(function () {
                if (currentFile) {
                    loadLogContent(currentFile);
                }
            });

            // 初始化
            loadLogFiles();
        });
    </script>
}
