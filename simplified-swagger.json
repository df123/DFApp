
{
  "openapi": "3.0.1",
  "info": {
    "title": "DFApp API - Simplified",
    "version": "v1",
    "description": "Simplified OpenAPI spec for DFApp, focusing on custom endpoints."
  },
  "paths": {
    "/api/abp/application-configuration": {
      "get": {
        "tags": ["AbpApplicationConfiguration"],
        "summary": "Get application configuration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "localization": {"type": "object"},
                    "auth": {"type": "object"},
                    "setting": {"type": "object"},
                    "currentUser": {"type": "object"},
                    "features": {"type": "object"},
                    "globalFeatures": {"type": "object"},
                    "multiTenancy": {"type": "object"},
                    "currentTenant": {"type": "object"},
                    "timing": {"type": "object"},
                    "clock": {"type": "object"},
                    "objectExtensions": {"type": "object"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "tags": ["Account"],
        "summary": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userNameOrEmailAddress": {"type": "string"},
                  "password": {"type": "string"},
                  "rememberMe": {"type": "boolean"}
                },
                "required": ["userNameOrEmailAddress", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {"type": "integer"},
                    "description": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/account/register": {
      "post": {
        "tags": ["Account"],
        "summary": "Register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {"type": "string"},
                  "emailAddress": {"type": "string"},
                  "password": {"type": "string"},
                  "appName": {"type": "string"}
                },
                "required": ["userName", "emailAddress", "password", "appName"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/aria2": {
      "get": {
        "tags": ["Aria2"],
        "summary": "Get Aria2 status",
        "parameters": [
          {"name": "Filter", "in": "query", "schema": {"type": "string"}},
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Aria2.Response.TellStatus.TellStatusResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Aria2"],
        "summary": "Add download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "urls": {
                    "type": "array",
                    "items": {"type": "string"}
                  },
                  "savePath": {"type": "string"}
                },
                "required": ["urls"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/app/aria2/{id}/external-link": {
      "get": {
        "tags": ["Aria2"],
        "summary": "Get external link for download ID",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/app/bookkeeping-category": {
      "get": {
        "tags": ["BookkeepingCategory"],
        "summary": "Get bookkeeping categories",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.BookkeepingCategoryDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["BookkeepingCategory"],
        "summary": "Create bookkeeping category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.CreateUpdateBookkeepingCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.BookkeepingCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/bookkeeping-category/{id}": {
      "put": {
        "tags": ["BookkeepingCategory"],
        "summary": "Update bookkeeping category",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.CreateUpdateBookkeepingCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.BookkeepingCategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["BookkeepingCategory"],
        "summary": "Delete bookkeeping category",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/bookkeeping-expenditure": {
      "get": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Get bookkeeping expenditures",
        "parameters": [
          {"name": "Filter", "in": "query", "schema": {"type": "string"}},
          {"name": "CategoryId", "in": "query", "schema": {"type": "integer"}},
          {"name": "IsBelongToSelf", "in": "query", "schema": {"type": "boolean"}},
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.BookkeepingExpenditureDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Create bookkeeping expenditure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.CreateUpdateBookkeepingExpenditureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.BookkeepingExpenditureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/bookkeeping-expenditure/{id}": {
      "put": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Update bookkeeping expenditure",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.CreateUpdateBookkeepingExpenditureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.BookkeepingExpenditureDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Delete bookkeeping expenditure",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/bookkeeping-expenditure/chart": {
      "get": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Get expenditure chart data",
        "parameters": [
          {"name": "start", "in": "query", "schema": {"type": "string", "format": "date-time"}},
          {"name": "end", "in": "query", "schema": {"type": "string", "format": "date-time"}},
          {"name": "compareType", "in": "query", "schema": {"$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.CompareType"}},
          {"name": "numberType", "in": "query", "schema": {"$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.NumberType"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.Analysis.ChartJSDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/bookkeeping-expenditure/monthly-expenditure": {
      "get": {
        "tags": ["BookkeepingExpenditure"],
        "summary": "Get monthly expenditure",
        "parameters": [
          {"name": "year", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Bookkeeping.Expenditure.MonthlyExpenditureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/configuration-info": {
      "get": {
        "tags": ["ConfigurationInfo"],
        "summary": "Get configuration infos",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Configuration.ConfigurationInfoDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ConfigurationInfo"],
        "summary": "Create configuration info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Configuration.CreateUpdateConfigurationInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Configuration.ConfigurationInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/configuration-info/{id}": {
      "put": {
        "tags": ["ConfigurationInfo"],
        "summary": "Update configuration info",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Configuration.CreateUpdateConfigurationInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Configuration.ConfigurationInfoDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ConfigurationInfo"],
        "summary": "Delete configuration info",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/dynamic-ip": {
      "get": {
        "tags": ["DynamicIP"],
        "summary": "Get dynamic IPs",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.IP.DynamicIPDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["DynamicIP"],
        "summary": "Create dynamic IP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.IP.CreateUpdateDynamicIPDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.IP.DynamicIPDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/dynamic-ip/{id}": {
      "put": {
        "tags": ["DynamicIP"],
        "summary": "Update dynamic IP",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.IP.CreateUpdateDynamicIPDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.IP.DynamicIPDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["DynamicIP"],
        "summary": "Delete dynamic IP",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/file-upload-info": {
      "get": {
        "tags": ["FileUploadInfo"],
        "summary": "Get file upload infos",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.FileUploadDownload.FileUploadInfoDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["FileUploadInfo"],
        "summary": "Create file upload info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.FileUploadDownload.CreateUpdateFileUploadInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.FileUploadDownload.FileUploadInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/file-upload-info/{id}": {
      "put": {
        "tags": ["FileUploadInfo"],
        "summary": "Update file upload info",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.FileUploadDownload.CreateUpdateFileUploadInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.FileUploadDownload.FileUploadInfoDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["FileUploadInfo"],
        "summary": "Delete file upload info",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/file-upload-info/configuration-value": {
      "get": {
        "tags": ["FileUploadInfo"],
        "summary": "Get custom file type config",
        "parameters": [
          {"name": "configurationName", "in": "query", "schema": {"type": "string"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.FileUploadDownload.CustomFileTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery": {
      "get": {
        "tags": ["Lottery"],
        "summary": "Get lotteries",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Lottery"],
        "summary": "Create lottery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.CreateUpdateLotteryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/{id}": {
      "put": {
        "tags": ["Lottery"],
        "summary": "Update lottery",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.CreateUpdateLotteryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Lottery"],
        "summary": "Delete lottery",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/lottery-grouped": {
      "get": {
        "tags": ["Lottery"],
        "summary": "Get lottery groups",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryGroupDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Lottery"],
        "summary": "Create lottery group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.CreateUpdateLotteryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery-result": {
      "get": {
        "tags": ["LotteryResult"],
        "summary": "Get lottery results",
        "parameters": [
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["LotteryResult"],
        "summary": "Create lottery result",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.CreateUpdateLotteryResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery-result/{id}": {
      "put": {
        "tags": ["LotteryResult"],
        "summary": "Update lottery result",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.CreateUpdateLotteryResultDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryResultDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["LotteryResult"],
        "summary": "Delete lottery result",
        "parameters": [
          {"name": "id", "in": "path", "required": true, "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/lottery/consts": {
      "get": {
        "tags": ["Lottery"],
        "summary": "Get lottery consts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Consts.ConstsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/simulation/kl8": {
      "post": {
        "tags": ["LotterySimulation"],
        "summary": "Generate KL8 simulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.Simulation.KL8.GenerateRandomNumbersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Simulation.KL8.LotterySimulationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/simulation/kl8/statistics": {
      "get": {
        "tags": ["LotterySimulation"],
        "summary": "Get KL8 statistics",
        "parameters": [
          {"name": "termNumber", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Simulation.KL8.StatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/simulation/ssq": {
      "post": {
        "tags": ["LotterySimulation"],
        "summary": "Generate SSQ simulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.Simulation.SSQ.GenerateRandomNumbersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Simulation.SSQ.LotterySimulationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/simulation/ssq/statistics": {
      "get": {
        "tags": ["LotterySimulation"],
        "summary": "Get SSQ statistics",
        "parameters": [
          {"name": "termNumber", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Simulation.SSQ.StatisticsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery/statistics-win": {
      "get": {
        "tags": ["LotteryStatistics"],
        "summary": "Get lottery win statistics",
        "parameters": [
          {"name": "purchasedPeriod", "in": "query", "schema": {"type": "integer"}},
          {"name": "winningPeriod", "in": "query", "schema": {"type": "integer"}},
          {"name": "lotteryType", "in": "query", "schema": {"type": "string"}},
          {"name": "Sorting", "in": "query", "schema": {"type": "string"}},
          {"name": "SkipCount", "in": "query", "schema": {"type": "integer"}},
          {"name": "MaxResultCount", "in": "query", "schema": {"type": "integer"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.Statistics.StatisticsWinItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/lottery-combination": {
      "post": {
        "tags": ["LotteryCombination"],
        "summary": "Generate lottery combination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DFApp.Lottery.LotteryCombinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFApp.Lottery.LotteryCombinationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/app/tg-login/status": {
      "post": {
        "tags": ["TGLogin"],
        "summary": "Check TG login status",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/api/app/tg-login/config": {
      "post": {
        "tags": ["TGLogin"],
        "summary": "Get TG login config",
        "parameters": [
          {"name": "value", "in": "query", "schema": {"type": "string"}}
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/api/app/tg-login/chats": {
      "post": {
        "tags": ["TGLogin"],
        "summary": "Get TG chats",
        "responses": {
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/log-sink/queuesink/logs": {
      "get": {
        "tags": ["LogSink"],
        "summary": "Get logs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {"type": "string"},
                      "timestamp": {"type": "string", "format": "date-time"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DFApp.Aria2.Response.TellStatus.TellStatusResultDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "gid": {"type": "string"},
          "status": {"type": "string"},
          "totalLength": {"type": "string"},
          "completedLength": {"type": "string"},
          "uploadLength": {"type": "string"},
          "downloadSpeed": {"type": "string"},
          "uploadSpeed": {"type": "string"},
          "errorCode": {"type": "string"},
          "errorMessage": {"type": "string"},
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {"type": "string"},
                "length": {"type": "string"},
                "completedLength": {"type": "string"}
              }
            }
          }
        }
      },
      "DFApp.Bookkeeping.Category.BookkeepingCategoryDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "category": {"type": "string"}
        }
      },
      "DFApp.Bookkeeping.Category.CreateUpdateBookkeepingCategoryDto": {
        "type": "object",
        "properties": {
          "category": {"type": "string"}
        },
        "required": ["category"]
      },
      "DFApp.Bookkeeping.Expenditure.BookkeepingExpenditureDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "expenditureDate": {"type": "string", "format": "date-time"},
          "expenditure": {"type": "number", "format": "double"},
          "remark": {"type": "string"},
          "isBelongToSelf": {"type": "boolean"},
          "category": {
            "$ref": "#/components/schemas/DFApp.Bookkeeping.Category.BookkeepingCategoryDto"
          },
          "categoryId": {"type": "integer"}
        }
      },
      "DFApp.Bookkeeping.Expenditure.CreateUpdateBookkeepingExpenditureDto": {
        "type": "object",
        "properties": {
          "expenditureDate": {"type": "string", "format": "date-time"},
          "expenditure": {"type": "number", "format": "double"},
          "remark": {"type": "string"},
          "isBelongToSelf": {"type": "boolean"},
          "categoryId": {"type": "integer"}
        },
        "required": ["expenditureDate", "expenditure", "isBelongToSelf", "categoryId"]
      },
      "DFApp.Bookkeeping.Expenditure.CompareType": {
        "type": "integer",
        "enum": [0, 1, 2, 3]
      },
      "DFApp.Bookkeeping.Expenditure.NumberType": {
        "type": "integer",
        "enum": [0, 1]
      },
      "DFApp.Bookkeeping.Expenditure.Analysis.ChartJSDto": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {"type": "string"}
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {"type": "string"},
                "data": {
                  "type": "array",
                  "items": {"type": "number", "format": "double"}
                }
              }
            }
          },
          "total": {"type": "number", "format": "double"},
          "compareTotal": {"type": "number", "format": "double"},
          "differenceTotal": {"type": "number", "format": "double"}
        }
      },
      "DFApp.Bookkeeping.Expenditure.MonthlyExpenditureDto": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {"type": "string"}
          },
          "totalData": {
            "type": "array",
            "items": {"type": "number", "format": "double"}
          },
          "selfData": {
            "type": "array",
            "items": {"type": "number", "format": "double"}
          },
          "nonSelfData": {
            "type": "array",
            "items": {"type": "number", "format": "double"}
          },
          "totalAverage": {"type": "number", "format": "double"},
          "selfAverage": {"type": "number", "format": "double"},
          "nonSelfAverage": {"type": "number", "format": "double"}
        }
      },
      "DFApp.Configuration.ConfigurationInfoDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "moduleName": {"type": "string"},
          "configurationName": {"type": "string"},
          "configurationValue": {"type": "string"},
          "remark": {"type": "string"}
        }
      },
      "DFApp.Configuration.CreateUpdateConfigurationInfoDto": {
        "type": "object",
        "properties": {
          "moduleName": {"type": "string"},
          "configurationName": {"type": "string"},
          "configurationValue": {"type": "string"},
          "remark": {"type": "string"}
        },
        "required": ["moduleName", "configurationName", "configurationValue"]
      },
      "DFApp.IP.DynamicIPDto": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid"},
          "ip": {"type": "string"},
          "port": {"type": "string"}
        }
      },
      "DFApp.IP.CreateUpdateDynamicIPDto": {
        "type": "object",
        "properties": {
          "ip": {"type": "string"},
          "port": {"type": "string"}
        },
        "required": ["ip", "port"]
      },
      "DFApp.FileUploadDownload.FileUploadInfoDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "fileName": {"type": "string"},
          "path": {"type": "string"},
          "sha1": {"type": "string"},
          "fileSize": {"type": "integer"}
        }
      },
      "DFApp.FileUploadDownload.CreateUpdateFileUploadInfoDto": {
        "type": "object",
        "properties": {
          "fileName": {"type": "string"},
          "path": {"type": "string"},
          "sha1": {"type": "string"},
          "fileSize": {"type": "integer"}
        },
        "required": ["fileName", "path", "sha1", "fileSize"]
      },
      "DFApp.FileUploadDownload.CustomFileTypeDto": {
        "type": "object",
        "properties": {
          "configurationName": {"type": "string"},
          "configurationValue": {"type": "string"}
        }
      },
      "DFApp.Lottery.LotteryDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "indexNo": {"type": "integer"},
          "number": {"type": "string"},
          "colorType": {"type": "string"},
          "lotteryType": {"type": "string"},
          "groupId": {"type": "integer"}
        }
      },
      "DFApp.Lottery.CreateUpdateLotteryDto": {
        "type": "object",
        "properties": {
          "indexNo": {"type": "integer"},
          "number": {"type": "string"},
          "colorType": {"type": "string"},
          "lotteryType": {"type": "string"},
          "groupId": {"type": "integer"}
        },
        "required": ["indexNo", "number", "colorType", "lotteryType", "groupId"]
      },
      "DFApp.Lottery.LotteryGroupDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "indexNo": {"type": "integer"},
          "lotteryType": {"type": "string"},
          "groupId": {"type": "integer"},
          "redNumbers": {"type": "string"},
          "blueNumber": {"type": "string"}
        }
      },
      "DFApp.Lottery.LotteryResultDto": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "name": {"type": "string"},
          "code": {"type": "string"},
          "detailsLink": {"type": "string"},
          "videoLink": {"type": "string"},
          "date": {"type": "string"},
          "week": {"type": "string"},
          "red": {"type": "string"},
          "blue": {"type": "string"},
          "blue2": {"type": "string"},
          "sales": {"type": "string"},
          "poolMoney": {"type": "string"},
          "content": {"type": "string"},
          "addMoney": {"type": "string"},
          "addMoney2": {"type": "string"},
          "msg": {"type": "string"},
          "z2Add": {"type": "string"},
          "m2Add": {"type": "string"},
          "prizegrades": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {"type": "integer"},
                "typeNum": {"type": "string"},
                "typeMoney": {"type": "string"}
              }
            }
          }
        }
      },
      "DFApp.Lottery.CreateUpdateLotteryResultDto": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "code": {"type": "string"},
          "detailsLink": {"type": "string"},
          "videoLink": {"type": "string"},
          "date": {"type": "string"},
          "week": {"type": "string"},
          "red": {"type": "string"},
          "blue": {"type": "string"},
          "blue2": {"type": "string"},
          "sales": {"type": "string"},
          "poolMoney": {"type": "string"},
          "content": {"type": "string"},
          "addMoney": {"type": "string"},
          "addMoney2": {"type": "string"},
          "msg": {"type": "string"},
          "z2Add": {"type": "string"},
          "m2Add": {"type": "string"},
          "prizegrades": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {"type": "integer"},
                "typeNum": {"type": "string"},
                "