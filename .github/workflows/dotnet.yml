# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  pull_request:
    branches: [ "master" ]

# 添加权限配置
permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      release: true

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    # - name: Restore dependencies
    #   run: dotnet restore
    # - name: Build
    #   run: dotnet build --no-restore

    - name: Add repository directory to Git safe directory
      run: |
        git config --global --add safe.directory ./publish
      shell: bash

    - name: Install dotnet-ef tool
      run: dotnet tool install --global dotnet-ef

    - name: Install Abp Cli
      run: dotnet tool install -g Volo.Abp.Cli

    - name: Install abp libs
      run: abp install-libs

    - name: Create publish directory
      run: mkdir -p ./publish

    # - name: Modify appsettings.json for DbMigrator
    #   run: |
    #     jq '.ConnectionStrings.Default = "Data Source=/home/runner/work/DFApp/DFApp/publish/DFApp.db"' ./src/DFApp.DbMigrator/appsettings.json > ./src/DFApp.DbMigrator/appsettings.tmp.json
    #     mv ./src/DFApp.DbMigrator/appsettings.tmp.json ./src/DFApp.DbMigrator/appsettings.json
    #   shell: bash

    # - name: Run DbMigrator
    #   run: |
    #     cd ./src/DFApp.DbMigrator/
    #     dotnet run
    #   shell: bash
      
    - name: Publish project
      run: |
        cd ./src/DFApp.Web/
        dotnet publish --configuration Release \
          --framework net9.0 \
          --runtime linux-x64 \
          --no-self-contained \
          --output ../../publish

    - name: Zip publish files
      run: |
        cd publish
        zip -r ../DFApp-linux-x64.zip .
      shell: bash

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: preview-${{ github.run_number }}
        name: Preview Release ${{ github.run_number }}
        draft: false
        prerelease: true
        files: DFApp-linux-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
